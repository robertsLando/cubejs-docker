[{"id":"be1a2b5d.496948","type":"tab","label":"Flow 1","disabled":false,"info":""},{"id":"36e53bc7.cfc584","type":"postgresdb","cfgname":"local","hostname":"postgres","port":"5432","db":"postgres","ssl":false},{"id":"f9f4ac96.80eab","type":"http request","z":"be1a2b5d.496948","name":"manufacturers","method":"GET","ret":"obj","paytoqs":"ignore","url":"https://raw.githubusercontent.com/zwave-js/node-zwave-js/master/packages/config/config/manufacturers.json","tls":"","persist":false,"proxy":"","authType":"","x":390,"y":200,"wires":[["fb6c79.4be0c388"]]},{"id":"9a53cdd.4c8ac3","type":"inject","z":"be1a2b5d.496948","name":"","props":[{"p":"payload"},{"p":"topic","vt":"str"}],"repeat":"","crontab":"","once":false,"onceDelay":0.1,"topic":"","payload":"","payloadType":"date","x":180,"y":200,"wires":[["f9f4ac96.80eab"]]},{"id":"2596337a.07ff3c","type":"http request","z":"be1a2b5d.496948","name":"sensors","method":"GET","ret":"txt","paytoqs":"ignore","url":"https://raw.githubusercontent.com/zwave-js/node-zwave-js/master/packages/config/config/sensorTypes.json","tls":"","persist":false,"proxy":"","authType":"","x":360,"y":260,"wires":[["fbf114d2.8348b8"]]},{"id":"21d188f2.0b3338","type":"inject","z":"be1a2b5d.496948","name":"","props":[{"p":"payload"},{"p":"topic","vt":"str"}],"repeat":"","crontab":"","once":false,"onceDelay":0.1,"topic":"","payload":"","payloadType":"date","x":170,"y":260,"wires":[["2596337a.07ff3c"]]},{"id":"fbf114d2.8348b8","type":"function","z":"be1a2b5d.496948","name":"","func":"msg.payload = JSON.parse(msg.payload.replace(/\\/\\/[^\\n]+/g, ''))\nflow.set('sensors', Object.keys(msg.payload))","outputs":0,"noerr":0,"initialize":"","finalize":"","x":570,"y":260,"wires":[]},{"id":"fb6c79.4be0c388","type":"function","z":"be1a2b5d.496948","name":"","func":"flow.set('manufacturers', Object.keys(msg.payload))","outputs":1,"noerr":0,"initialize":"","finalize":"","x":580,"y":200,"wires":[[]]},{"id":"83125458.d39088","type":"inject","z":"be1a2b5d.496948","name":"","props":[{"p":"payload"},{"p":"topic","vt":"str"}],"repeat":"","crontab":"","once":false,"onceDelay":0.1,"topic":"","payload":"","payloadType":"date","x":160,"y":380,"wires":[["cd39936c.15e4e"]]},{"id":"cd39936c.15e4e","type":"function","z":"be1a2b5d.496948","name":"","func":"var ID = function () {\n  // Math.random should be unique because of its seeding algorithm.\n  // Convert it to base 36 (numbers + letters), and grab the first 9 characters\n  // after the decimal.\n  return Math.random().toString(16).substr(2, 7);\n};\n\nvar hex = function () {\n  // Math.random should be unique because of its seeding algorithm.\n  // Convert it to base 36 (numbers + letters), and grab the first 9 characters\n  // after the decimal.\n  return Math.random().toString(16).substr(2, 4);\n};\n\nvar random = function(items) {\n    return items[Math.floor(Math.random() * items.length)];\n}\n\nfunction getRandomInt(min, max) {\n    min = Math.ceil(min);\n    max = Math.floor(max);\n    return Math.floor(Math.random() * (max - min + 1)) + min;\n}\n\nconst manufacturers = flow.get('manufacturers')\nconst types = flow.get('sensors')\n\nconst networks = []\n\nfor(var i = 0;i < 100; i++) {\n    const network = `0x${ID()}`\n    const query = `INSERT INTO Network(homeId, zjsVersion) VALUES ('${network}', '7.0.0')`\n    node.send({ payload: query })\n    networks.push(network)\n}\n\nconst ids = {}\n\nfor(const n of networks) {\n    ids[n] = {}\n    const total = getRandomInt(10, 50)\n    for(let i = 0; i < total; i++) {\n        const e = {\n            nodeId: getRandomInt(1, 250),\n            manuf: random(manufacturers),\n            prodType: random(types),\n            prodId: '0x' + hex()\n        }\n        \n        ids[n][e.nodeId] = e\n    }\n}\n\n\nfor(const n in ids) {\n    for(const k in ids[n]) {\n        const e = ids[n][k]\n        const query = `INSERT INTO Device(network, nodeId, manufacturer, prodType, prodId) VALUES ('${n}', ${e.nodeId}, '${e.manuf}', '${e.prodType}', '${e.prodId}')`\n        node.send({payload: query})\n    }\n}\n\n","outputs":1,"noerr":0,"initialize":"","finalize":"","x":360,"y":380,"wires":[["3d359197.1a57ee"]]},{"id":"3d359197.1a57ee","type":"postgres","z":"be1a2b5d.496948","postgresdb":"36e53bc7.cfc584","name":"db","output":true,"perrow":false,"rowspermsg":"1","return_on_error":true,"limit_queries":"0","limit_by":"payload","limit_value":"1","limit_drop_intermediate":false,"limit_drop_if_in_queue":false,"outputs":true,"x":690,"y":380,"wires":[["b0176789.5008c8"]]},{"id":"b0176789.5008c8","type":"debug","z":"be1a2b5d.496948","name":"","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"true","targetType":"full","statusVal":"","statusType":"auto","x":849,"y":380,"wires":[]}]